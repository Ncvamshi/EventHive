{"ast":null,"code":"var _jsxFileName = \"/home/bubbles/Projects/Hackoproj/client/src/home/Home.js\",\n  _s = $RefreshSig$();\n// // Home.js\n// import React, { useState, useEffect } from \"react\";\n// import \"./Home.css\";\n// import { useNavigate } from \"react-router-dom\";\n\n// const Home = () => {\n//   const navigate = useNavigate();\n\n//   const [events, setEvents] = useState([]);\n\n//   // Fetch events from the server\n//   useEffect(() => {\n//     const fetchEvents = async () => {\n//       try {\n//         const response = await fetch(\"/api/home/events\");\n//         if (!response.ok) {\n//           throw new Error(`HTTP error! Status: ${response.status}`);\n//         }\n//         const data = await response.json();\n//         console.log(\"Fetched events:\", data); // Debug fetched data\n//         setEvents(data); // Update state\n//       } catch (error) {\n//         console.error(\"Error fetching events:\", error);\n//       }\n//     };\n\n//     fetchEvents();\n//   }, []);\n\n//   return (\n//     <div className=\"home-container\">\n//       <div className=\"navbar\">\n//         <div className=\"nav-left\">\n//           <button onClick={() => navigate(\"/\")}>Home</button>\n//           <button onClick={() => navigate(\"/about\")}>About</button>\n//           <button onClick={() => navigate(\"/contact\")}>Contact</button>\n//         </div>\n//         <div className=\"nav-right\">\n//           <button onClick={() => navigate(\"/profile\")}>Profile</button>\n//         </div>\n//       </div>\n\n//       <div className=\"content\">\n//       <div className=\"events-container\">\n//   {events.length > 0 ? (\n//     events.map((event) => (\n//       <div className=\"event-card\" key={event.id}>\n//         <div className=\"event-header\">\n//           <p className=\"event-rate\">{event.rate}</p>\n//           <button className=\"bookmark-btn\">🔖</button>\n//         </div>\n//         <h3 className=\"event-title\">{event.title}</h3>\n//         <div className=\"event-footer\">\n//           <img src={event.logo} alt={`${event.company} logo`} className=\"event-logo\" />\n//           <p className=\"event-company\">{event.company}</p>\n//           <button className=\"view-btn\" onClick={() => navigate(`/event/${event.id}`)}>View</button>\n\n//         </div>\n//       </div>\n//     ))\n//   ) : (\n//     <p>Loading events...</p>\n//   )}\n// </div>\n\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Home;\n\nimport React, { useState } from \"react\";\nimport { useParams, useNavigate, useLocation } from \"react-router-dom\";\nimport \"./EventDetails.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventDetails = () => {\n  _s();\n  const {\n    id\n  } = useParams(); // Get the event ID from the URL\n  const navigate = useNavigate();\n  const location = useLocation();\n  const {\n    onApply\n  } = location.state || {}; // Callback function passed from Home.js\n  const [event, setEvent] = React.useState(null);\n  const [showModal, setShowModal] = useState(false); // Modal visibility state\n  const [applied, setApplied] = useState(false); // Track if the event is applied\n  const [showPopup, setShowPopup] = useState(false); // Show \"Applied!\" popup\n\n  // Fetch event data when the component is mounted\n  React.useEffect(() => {\n    const fetchEvent = async () => {\n      try {\n        const response = await fetch(`/api/home/events/${id}`);\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        const data = await response.json();\n        setEvent(data);\n      } catch (error) {\n        console.error(\"Error fetching event:\", error);\n      }\n    };\n    fetchEvent();\n  }, [id]);\n  const handleApply = () => {\n    setShowPopup(true); // Show the popup\n    setApplied(true); // Mark event as applied\n    if (onApply) {\n      onApply(); // Call the callback to update applied status in Home.js\n    }\n    setShowModal(false); // Close the modal\n    setTimeout(() => setShowPopup(false), 2000); // Hide popup after 2 seconds\n  };\n  if (!event) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading event details...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"event-details-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"back-btn\",\n      onClick: () => navigate(-1),\n      children: \"\\u2190 Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"event-details-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: event.logo,\n        alt: `${event.company} logo`,\n        className: \"event-logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"event-title\",\n        children: event.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"event-rate\",\n        children: [\"Rate: \", event.rate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"event-company\",\n        children: [\"Company: \", event.company]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"apply-btn\",\n        onClick: () => setShowModal(true),\n        disabled: applied,\n        children: applied ? \"Applied\" : \"Apply\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-btn\",\n          onClick: () => setShowModal(false),\n          children: \"\\u2716\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Apply for this event with your team?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ok-btn\",\n          onClick: handleApply,\n          children: \"OK\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }, this), showPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup\",\n      children: \"Applied!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n};\n_s(EventDetails, \"DONklyhwl0c2vaq0kUboVvuu5Fk=\", false, function () {\n  return [useParams, useNavigate, useLocation];\n});\n_c = EventDetails;\nexport default EventDetails;\nvar _c;\n$RefreshReg$(_c, \"EventDetails\");","map":{"version":3,"names":["React","useState","useParams","useNavigate","useLocation","jsxDEV","_jsxDEV","EventDetails","_s","id","navigate","location","onApply","state","event","setEvent","showModal","setShowModal","applied","setApplied","showPopup","setShowPopup","useEffect","fetchEvent","response","fetch","ok","Error","status","data","json","error","console","handleApply","setTimeout","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","src","logo","alt","company","title","rate","disabled","_c","$RefreshReg$"],"sources":["/home/bubbles/Projects/Hackoproj/client/src/home/Home.js"],"sourcesContent":["// // Home.js\n// import React, { useState, useEffect } from \"react\";\n// import \"./Home.css\";\n// import { useNavigate } from \"react-router-dom\";\n\n// const Home = () => {\n//   const navigate = useNavigate();\n\n//   const [events, setEvents] = useState([]);\n\n//   // Fetch events from the server\n//   useEffect(() => {\n//     const fetchEvents = async () => {\n//       try {\n//         const response = await fetch(\"/api/home/events\");\n//         if (!response.ok) {\n//           throw new Error(`HTTP error! Status: ${response.status}`);\n//         }\n//         const data = await response.json();\n//         console.log(\"Fetched events:\", data); // Debug fetched data\n//         setEvents(data); // Update state\n//       } catch (error) {\n//         console.error(\"Error fetching events:\", error);\n//       }\n//     };\n  \n//     fetchEvents();\n//   }, []);\n  \n  \n  \n//   return (\n//     <div className=\"home-container\">\n//       <div className=\"navbar\">\n//         <div className=\"nav-left\">\n//           <button onClick={() => navigate(\"/\")}>Home</button>\n//           <button onClick={() => navigate(\"/about\")}>About</button>\n//           <button onClick={() => navigate(\"/contact\")}>Contact</button>\n//         </div>\n//         <div className=\"nav-right\">\n//           <button onClick={() => navigate(\"/profile\")}>Profile</button>\n//         </div>\n//       </div>\n\n//       <div className=\"content\">\n//       <div className=\"events-container\">\n//   {events.length > 0 ? (\n//     events.map((event) => (\n//       <div className=\"event-card\" key={event.id}>\n//         <div className=\"event-header\">\n//           <p className=\"event-rate\">{event.rate}</p>\n//           <button className=\"bookmark-btn\">🔖</button>\n//         </div>\n//         <h3 className=\"event-title\">{event.title}</h3>\n//         <div className=\"event-footer\">\n//           <img src={event.logo} alt={`${event.company} logo`} className=\"event-logo\" />\n//           <p className=\"event-company\">{event.company}</p>\n//           <button className=\"view-btn\" onClick={() => navigate(`/event/${event.id}`)}>View</button>\n\n//         </div>\n//       </div>\n//     ))\n//   ) : (\n//     <p>Loading events...</p>\n//   )}\n// </div>\n\n\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Home;\n\nimport React, { useState } from \"react\";\nimport { useParams, useNavigate, useLocation } from \"react-router-dom\";\nimport \"./EventDetails.css\";\n\nconst EventDetails = () => {\n  const { id } = useParams(); // Get the event ID from the URL\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { onApply } = location.state || {}; // Callback function passed from Home.js\n  const [event, setEvent] = React.useState(null);\n  const [showModal, setShowModal] = useState(false); // Modal visibility state\n  const [applied, setApplied] = useState(false); // Track if the event is applied\n  const [showPopup, setShowPopup] = useState(false); // Show \"Applied!\" popup\n\n  // Fetch event data when the component is mounted\n  React.useEffect(() => {\n    const fetchEvent = async () => {\n      try {\n        const response = await fetch(`/api/home/events/${id}`);\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        const data = await response.json();\n        setEvent(data);\n      } catch (error) {\n        console.error(\"Error fetching event:\", error);\n      }\n    };\n\n    fetchEvent();\n  }, [id]);\n\n  const handleApply = () => {\n    setShowPopup(true); // Show the popup\n    setApplied(true); // Mark event as applied\n    if (onApply) {\n      onApply(); // Call the callback to update applied status in Home.js\n    }\n    setShowModal(false); // Close the modal\n    setTimeout(() => setShowPopup(false), 2000); // Hide popup after 2 seconds\n  };\n\n  if (!event) {\n    return <p>Loading event details...</p>;\n  }\n\n  return (\n    <div className=\"event-details-container\">\n      <button className=\"back-btn\" onClick={() => navigate(-1)}>← Back</button>\n      <div className=\"event-details-card\">\n        <img src={event.logo} alt={`${event.company} logo`} className=\"event-logo\" />\n        <h1 className=\"event-title\">{event.title}</h1>\n        <p className=\"event-rate\">Rate: {event.rate}</p>\n        <p className=\"event-company\">Company: {event.company}</p>\n        <button className=\"apply-btn\" onClick={() => setShowModal(true)} disabled={applied}>\n          {applied ? \"Applied\" : \"Apply\"}\n        </button>\n      </div>\n\n      {/* Modal */}\n      {showModal && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-box\">\n            <button className=\"close-btn\" onClick={() => setShowModal(false)}>✖</button>\n            <div className=\"modal-content\">\n              <p>Apply for this event with your team?</p>\n            </div>\n            <button className=\"ok-btn\" onClick={handleApply}>OK</button>\n          </div>\n        </div>\n      )}\n\n      {/* Popup */}\n      {showPopup && <div className=\"popup\">Applied!</div>}\n    </div>\n  );\n};\n\nexport default EventDetails;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}