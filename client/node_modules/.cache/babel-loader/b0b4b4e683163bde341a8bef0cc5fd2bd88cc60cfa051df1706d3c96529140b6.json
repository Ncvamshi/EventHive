{"ast":null,"code":"var _jsxFileName = \"/home/bubbles/Projects/Hackoproj/client/src/Event/EventDetails.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import { useParams, useNavigate } from \"react-router-dom\";\n// import \"./EventDetails.css\";\n\n// const EventDetails = () => {\n//   const { id } = useParams(); // Get the event ID from the URL\n//   const navigate = useNavigate();\n//   const [event, setEvent] = React.useState(null);\n//   const [showModal, setShowModal] = useState(false); // Modal visibility state\n//   const [applied, setApplied] = useState(false); // Track if the event is applied\n//   const [showPopup, setShowPopup] = useState(false); // Show \"Applied!\" popup\n\n//   // Mock data for teammates, friends, and waitlist\n//   const [teammates, setTeammates] = useState([\n//     { id: 1, name: \"Alice\" },\n//     { id: 2, name: \"Bob\" },\n//   ]);\n\n//   const [friends, setFriends] = useState([\n//     { id: 3, name: \"Charlie\" },\n//     { id: 4, name: \"Diana\" },\n//     { id: 5, name: \"Elena\" },\n//     { id: 6, name: \"George\" },\n//   ]);\n\n//   const [waitlist, setWaitlist] = useState([\n//     { id: 7, name: \"Hannah\" },\n//     { id: 8, name: \"Ian\" },\n//     { id: 9, name: \"Jack\" },\n//     { id: 10, name: \"Kelly\" },\n//   ]);\n\n//   // Fetch event data when the component is mounted\n//   React.useEffect(() => {\n//     const fetchEvent = async () => {\n//       try {\n//         const response = await fetch(`/api/home/events/${id}`);\n//         if (!response.ok) {\n//           throw new Error(`HTTP error! Status: ${response.status}`);\n//         }\n//         const data = await response.json();\n//         setEvent(data);\n//       } catch (error) {\n//         console.error(\"Error fetching event:\", error);\n//       }\n//     };\n\n//     fetchEvent();\n//   }, [id]);\n\n//   const addToTeammates = (user, fromList, setList) => {\n//     setTeammates((prev) => [...prev, user]); // Add to teammates\n//     setList((prev) => prev.filter((u) => u.id !== user.id)); // Remove from the original list\n//   };\n\n//   const removeFromTeammates = (user) => {\n//     setTeammates((prev) => prev.filter((u) => u.id !== user.id)); // Remove from teammates\n//     if (user.source === \"friends\") {\n//       setFriends((prev) => [...prev, user]); // Add back to friends\n//     } else if (user.source === \"waitlist\") {\n//       setWaitlist((prev) => [...prev, user]); // Add back to waitlist\n//     }\n//   };\n\n//   const handleApply = () => {\n//     setShowPopup(true); // Show the popup\n//     setApplied(true); // Mark event as applied\n//     setShowModal(false); // Close the modal\n//     setTimeout(() => setShowPopup(false), 2000); // Hide popup after 2 seconds\n//   };\n\n//   if (!event) {\n//     return <p>Loading event details...</p>;\n//   }\n\n//   return (\n//     <div className=\"event-details-container\">\n//       <button className=\"back-btn\" onClick={() => navigate(-1)}>← Back</button>\n//       <div className=\"event-details-card\">\n//         <img src={event.logo} alt={`${event.company} logo`} className=\"event-logo\" />\n//         <h1 className=\"event-title\">{event.title}</h1>\n//         <p className=\"event-rate\">Rate: {event.rate}</p>\n//         <p className=\"event-company\">Company: {event.company}</p>\n//         <button className=\"apply-btn\" onClick={() => setShowModal(true)} disabled={applied}>\n//           {applied ? \"Applied\" : \"Apply\"}\n//         </button>\n//       </div>\n\n//       {/* Modal */}\n//       {showModal && (\n//         <div className=\"modal-overlay\">\n//           <div className=\"modal-box\">\n//             <button className=\"close-btn\" onClick={() => setShowModal(false)}>✖</button>\n//             <div className=\"modal-content\">\n//               {/* Left: Selected Teammates */}\n//               <div className=\"modal-left\">\n//                 <h3>Selected Teammates</h3>\n//                 <ul>\n//                   {teammates.map((teammate) => (\n//                     <li key={teammate.id} className=\"teammate-item\">\n//                       <strong>{teammate.name}</strong>\n//                       <button\n//                         className=\"remove-btn\"\n//                         onClick={() => removeFromTeammates(teammate)}\n//                       >\n//                         -\n//                       </button>\n//                     </li>\n//                   ))}\n//                 </ul>\n//               </div>\n\n//               {/* Right: Friends and Waitlist */}\n//               <div className=\"modal-right\">\n//                 {/* Friends List */}\n//                 <div className=\"modal-friends\">\n//                   <h3>Friends List</h3>\n//                   <ul>\n//                     {friends.map((friend) => (\n//                       <li key={friend.id} className=\"friend-item\">\n//                         <strong>{friend.name}</strong>\n//                         <button\n//                           className=\"add-btn\"\n//                           onClick={() => addToTeammates({ ...friend, source: \"friends\" }, friends, setFriends)}\n//                         >\n//                           +\n//                         </button>\n//                       </li>\n//                     ))}\n//                   </ul>\n//                 </div>\n\n//                 {/* Waitlist */}\n//                 <div className=\"modal-waitlist\">\n//                   <h3>Waitlist</h3>\n//                   <ul>\n//                     {waitlist.map((person) => (\n//                       <li key={person.id} className=\"waitlist-item\">\n//                         <strong>{person.name}</strong>\n//                         <button\n//                           className=\"add-btn\"\n//                           onClick={() => addToTeammates({ ...person, source: \"waitlist\" }, waitlist, setWaitlist)}\n//                         >\n//                           +\n//                         </button>\n//                       </li>\n//                     ))}\n//                   </ul>\n//                 </div>\n//               </div>\n//             </div>\n//             <button className=\"ok-btn\" onClick={handleApply}>OK</button>\n//           </div>\n//         </div>\n//       )}\n\n//       {/* Popup */}\n//       {showPopup && <div className=\"popup\">Applied!</div>}\n//     </div>\n//   );\n// };\n\n// export default EventDetails;\n\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport \"./EventDetails.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventDetails = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [event, setEvent] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [applied, setApplied] = useState(() => {\n    const appliedEvents = JSON.parse(localStorage.getItem(\"appliedEvents\")) || [];\n    return appliedEvents.includes(id);\n  });\n  const [showPopup, setShowPopup] = useState(false);\n  const [teammates, setTeammates] = useState([{\n    id: 1,\n    name: \"Alice\"\n  }, {\n    id: 2,\n    name: \"Bob\"\n  }]);\n  const [friends, setFriends] = useState([{\n    id: 3,\n    name: \"Charlie\"\n  }, {\n    id: 4,\n    name: \"Diana\"\n  }, {\n    id: 5,\n    name: \"Elena\"\n  }, {\n    id: 6,\n    name: \"George\"\n  }]);\n  const [waitlist, setWaitlist] = useState([{\n    id: 7,\n    name: \"Hannah\"\n  }, {\n    id: 8,\n    name: \"Ian\"\n  }, {\n    id: 9,\n    name: \"Jack\"\n  }, {\n    id: 10,\n    name: \"Kelly\"\n  }]);\n  useEffect(() => {\n    const fetchEvent = async () => {\n      try {\n        const response = await fetch(`/api/home/events/${id}`);\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        const data = await response.json();\n        setEvent(data);\n      } catch (error) {\n        console.error(\"Error fetching event:\", error);\n      }\n    };\n    fetchEvent();\n  }, [id]);\n  const addToTeammates = (user, fromList, setList) => {\n    setTeammates(prev => [...prev, user]);\n    setList(prev => prev.filter(u => u.id !== user.id));\n  };\n  const removeFromTeammates = user => {\n    setTeammates(prev => prev.filter(u => u.id !== user.id));\n    if (user.source === \"friends\") {\n      setFriends(prev => [...prev, user]);\n    } else if (user.source === \"waitlist\") {\n      setWaitlist(prev => [...prev, user]);\n    }\n  };\n  const handleApply = () => {\n    setShowPopup(true);\n    setApplied(true);\n    const appliedEvents = JSON.parse(localStorage.getItem(\"appliedEvents\")) || [];\n    localStorage.setItem(\"appliedEvents\", JSON.stringify([...appliedEvents, id]));\n    setShowModal(false);\n    setTimeout(() => setShowPopup(false), 2000);\n  };\n  if (!event) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading event details...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 240,\n    columnNumber: 22\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"event-details-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"back-btn\",\n      onClick: () => navigate(-1),\n      children: \"\\u2190 Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"event-details-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: event.logo,\n        alt: `${event.company} logo`,\n        className: \"event-logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"event-title\",\n        children: event.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"event-rate\",\n        children: [\"Rate: \", event.rate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"event-company\",\n        children: [\"Company: \", event.company]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"apply-btn\",\n        onClick: () => setShowModal(true),\n        disabled: applied,\n        children: applied ? \"Applied\" : \"Apply\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this), showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-btn\",\n          onClick: () => setShowModal(false),\n          children: \"\\u2716\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-left\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Selected Teammates\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: teammates.map(teammate => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: teammate.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 265,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => removeFromTeammates(teammate),\n                  children: \"-\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 23\n                }, this)]\n              }, teammate.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-right\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal-friends\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Friends\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: friends.map(friend => /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: friend.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 277,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => addToTeammates({\n                      ...friend,\n                      source: \"friends\"\n                    }, friends, setFriends),\n                    children: \"+\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 278,\n                    columnNumber: 25\n                  }, this)]\n                }, friend.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal-waitlist\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Waitlist\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: waitlist.map(person => /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: person.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 290,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => addToTeammates({\n                      ...person,\n                      source: \"waitlist\"\n                    }, waitlist, setWaitlist),\n                    children: \"+\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 291,\n                    columnNumber: 25\n                  }, this)]\n                }, person.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ok-btn\",\n          onClick: handleApply,\n          children: \"OK\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 9\n    }, this), showPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup\",\n      children: \"Applied!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 243,\n    columnNumber: 5\n  }, this);\n};\n_s(EventDetails, \"rwz3KO+EjigfUADS7kjM1SPbf84=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = EventDetails;\nexport default EventDetails;\nvar _c;\n$RefreshReg$(_c, \"EventDetails\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","jsxDEV","_jsxDEV","EventDetails","_s","id","navigate","event","setEvent","showModal","setShowModal","applied","setApplied","appliedEvents","JSON","parse","localStorage","getItem","includes","showPopup","setShowPopup","teammates","setTeammates","name","friends","setFriends","waitlist","setWaitlist","fetchEvent","response","fetch","ok","Error","status","data","json","error","console","addToTeammates","user","fromList","setList","prev","filter","u","removeFromTeammates","source","handleApply","setItem","stringify","setTimeout","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","src","logo","alt","company","title","rate","disabled","map","teammate","friend","person","_c","$RefreshReg$"],"sources":["/home/bubbles/Projects/Hackoproj/client/src/Event/EventDetails.js"],"sourcesContent":["// import React, { useState } from \"react\";\n// import { useParams, useNavigate } from \"react-router-dom\";\n// import \"./EventDetails.css\";\n\n// const EventDetails = () => {\n//   const { id } = useParams(); // Get the event ID from the URL\n//   const navigate = useNavigate();\n//   const [event, setEvent] = React.useState(null);\n//   const [showModal, setShowModal] = useState(false); // Modal visibility state\n//   const [applied, setApplied] = useState(false); // Track if the event is applied\n//   const [showPopup, setShowPopup] = useState(false); // Show \"Applied!\" popup\n\n//   // Mock data for teammates, friends, and waitlist\n//   const [teammates, setTeammates] = useState([\n//     { id: 1, name: \"Alice\" },\n//     { id: 2, name: \"Bob\" },\n//   ]);\n\n//   const [friends, setFriends] = useState([\n//     { id: 3, name: \"Charlie\" },\n//     { id: 4, name: \"Diana\" },\n//     { id: 5, name: \"Elena\" },\n//     { id: 6, name: \"George\" },\n//   ]);\n\n//   const [waitlist, setWaitlist] = useState([\n//     { id: 7, name: \"Hannah\" },\n//     { id: 8, name: \"Ian\" },\n//     { id: 9, name: \"Jack\" },\n//     { id: 10, name: \"Kelly\" },\n//   ]);\n\n//   // Fetch event data when the component is mounted\n//   React.useEffect(() => {\n//     const fetchEvent = async () => {\n//       try {\n//         const response = await fetch(`/api/home/events/${id}`);\n//         if (!response.ok) {\n//           throw new Error(`HTTP error! Status: ${response.status}`);\n//         }\n//         const data = await response.json();\n//         setEvent(data);\n//       } catch (error) {\n//         console.error(\"Error fetching event:\", error);\n//       }\n//     };\n\n//     fetchEvent();\n//   }, [id]);\n\n//   const addToTeammates = (user, fromList, setList) => {\n//     setTeammates((prev) => [...prev, user]); // Add to teammates\n//     setList((prev) => prev.filter((u) => u.id !== user.id)); // Remove from the original list\n//   };\n\n//   const removeFromTeammates = (user) => {\n//     setTeammates((prev) => prev.filter((u) => u.id !== user.id)); // Remove from teammates\n//     if (user.source === \"friends\") {\n//       setFriends((prev) => [...prev, user]); // Add back to friends\n//     } else if (user.source === \"waitlist\") {\n//       setWaitlist((prev) => [...prev, user]); // Add back to waitlist\n//     }\n//   };\n\n//   const handleApply = () => {\n//     setShowPopup(true); // Show the popup\n//     setApplied(true); // Mark event as applied\n//     setShowModal(false); // Close the modal\n//     setTimeout(() => setShowPopup(false), 2000); // Hide popup after 2 seconds\n//   };\n\n//   if (!event) {\n//     return <p>Loading event details...</p>;\n//   }\n\n//   return (\n//     <div className=\"event-details-container\">\n//       <button className=\"back-btn\" onClick={() => navigate(-1)}>← Back</button>\n//       <div className=\"event-details-card\">\n//         <img src={event.logo} alt={`${event.company} logo`} className=\"event-logo\" />\n//         <h1 className=\"event-title\">{event.title}</h1>\n//         <p className=\"event-rate\">Rate: {event.rate}</p>\n//         <p className=\"event-company\">Company: {event.company}</p>\n//         <button className=\"apply-btn\" onClick={() => setShowModal(true)} disabled={applied}>\n//           {applied ? \"Applied\" : \"Apply\"}\n//         </button>\n//       </div>\n\n//       {/* Modal */}\n//       {showModal && (\n//         <div className=\"modal-overlay\">\n//           <div className=\"modal-box\">\n//             <button className=\"close-btn\" onClick={() => setShowModal(false)}>✖</button>\n//             <div className=\"modal-content\">\n//               {/* Left: Selected Teammates */}\n//               <div className=\"modal-left\">\n//                 <h3>Selected Teammates</h3>\n//                 <ul>\n//                   {teammates.map((teammate) => (\n//                     <li key={teammate.id} className=\"teammate-item\">\n//                       <strong>{teammate.name}</strong>\n//                       <button\n//                         className=\"remove-btn\"\n//                         onClick={() => removeFromTeammates(teammate)}\n//                       >\n//                         -\n//                       </button>\n//                     </li>\n//                   ))}\n//                 </ul>\n//               </div>\n\n//               {/* Right: Friends and Waitlist */}\n//               <div className=\"modal-right\">\n//                 {/* Friends List */}\n//                 <div className=\"modal-friends\">\n//                   <h3>Friends List</h3>\n//                   <ul>\n//                     {friends.map((friend) => (\n//                       <li key={friend.id} className=\"friend-item\">\n//                         <strong>{friend.name}</strong>\n//                         <button\n//                           className=\"add-btn\"\n//                           onClick={() => addToTeammates({ ...friend, source: \"friends\" }, friends, setFriends)}\n//                         >\n//                           +\n//                         </button>\n//                       </li>\n//                     ))}\n//                   </ul>\n//                 </div>\n\n//                 {/* Waitlist */}\n//                 <div className=\"modal-waitlist\">\n//                   <h3>Waitlist</h3>\n//                   <ul>\n//                     {waitlist.map((person) => (\n//                       <li key={person.id} className=\"waitlist-item\">\n//                         <strong>{person.name}</strong>\n//                         <button\n//                           className=\"add-btn\"\n//                           onClick={() => addToTeammates({ ...person, source: \"waitlist\" }, waitlist, setWaitlist)}\n//                         >\n//                           +\n//                         </button>\n//                       </li>\n//                     ))}\n//                   </ul>\n//                 </div>\n//               </div>\n//             </div>\n//             <button className=\"ok-btn\" onClick={handleApply}>OK</button>\n//           </div>\n//         </div>\n//       )}\n\n//       {/* Popup */}\n//       {showPopup && <div className=\"popup\">Applied!</div>}\n//     </div>\n//   );\n// };\n\n// export default EventDetails;\n\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport \"./EventDetails.css\";\n\nconst EventDetails = () => {\n  const { id } = useParams();\n  const navigate = useNavigate();\n\n  const [event, setEvent] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [applied, setApplied] = useState(() => {\n    const appliedEvents = JSON.parse(localStorage.getItem(\"appliedEvents\")) || [];\n    return appliedEvents.includes(id);\n  });\n  const [showPopup, setShowPopup] = useState(false);\n\n  const [teammates, setTeammates] = useState([\n    { id: 1, name: \"Alice\" },\n    { id: 2, name: \"Bob\" },\n  ]);\n\n  const [friends, setFriends] = useState([\n    { id: 3, name: \"Charlie\" },\n    { id: 4, name: \"Diana\" },\n    { id: 5, name: \"Elena\" },\n    { id: 6, name: \"George\" },\n  ]);\n\n  const [waitlist, setWaitlist] = useState([\n    { id: 7, name: \"Hannah\" },\n    { id: 8, name: \"Ian\" },\n    { id: 9, name: \"Jack\" },\n    { id: 10, name: \"Kelly\" },\n  ]);\n\n  useEffect(() => {\n    const fetchEvent = async () => {\n      try {\n        const response = await fetch(`/api/home/events/${id}`);\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        const data = await response.json();\n        setEvent(data);\n      } catch (error) {\n        console.error(\"Error fetching event:\", error);\n      }\n    };\n\n    fetchEvent();\n  }, [id]);\n\n  const addToTeammates = (user, fromList, setList) => {\n    setTeammates((prev) => [...prev, user]);\n    setList((prev) => prev.filter((u) => u.id !== user.id));\n  };\n\n  const removeFromTeammates = (user) => {\n    setTeammates((prev) => prev.filter((u) => u.id !== user.id));\n    if (user.source === \"friends\") {\n      setFriends((prev) => [...prev, user]);\n    } else if (user.source === \"waitlist\") {\n      setWaitlist((prev) => [...prev, user]);\n    }\n  };\n\n  const handleApply = () => {\n    setShowPopup(true);\n    setApplied(true);\n    const appliedEvents = JSON.parse(localStorage.getItem(\"appliedEvents\")) || [];\n    localStorage.setItem(\"appliedEvents\", JSON.stringify([...appliedEvents, id]));\n    setShowModal(false);\n    setTimeout(() => setShowPopup(false), 2000);\n  };\n\n  if (!event) return <p>Loading event details...</p>;\n\n  return (\n    <div className=\"event-details-container\">\n      <button className=\"back-btn\" onClick={() => navigate(-1)}>← Back</button>\n      <div className=\"event-details-card\">\n        <img src={event.logo} alt={`${event.company} logo`} className=\"event-logo\" />\n        <h1 className=\"event-title\">{event.title}</h1>\n        <p className=\"event-rate\">Rate: {event.rate}</p>\n        <p className=\"event-company\">Company: {event.company}</p>\n        <button className=\"apply-btn\" onClick={() => setShowModal(true)} disabled={applied}>\n          {applied ? \"Applied\" : \"Apply\"}\n        </button>\n      </div>\n\n      {showModal && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-box\">\n            <button className=\"close-btn\" onClick={() => setShowModal(false)}>✖</button>\n            <div className=\"modal-content\">\n              <div className=\"modal-left\">\n                <h3>Selected Teammates</h3>\n                <ul>\n                  {teammates.map((teammate) => (\n                    <li key={teammate.id}>\n                      <strong>{teammate.name}</strong>\n                      <button onClick={() => removeFromTeammates(teammate)}>-</button>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n              <div className=\"modal-right\">\n                <div className=\"modal-friends\">\n                  <h3>Friends</h3>\n                  <ul>\n                    {friends.map((friend) => (\n                      <li key={friend.id}>\n                        <strong>{friend.name}</strong>\n                        <button onClick={() => addToTeammates({ ...friend, source: \"friends\" }, friends, setFriends)}>\n                          +\n                        </button>\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n                <div className=\"modal-waitlist\">\n                  <h3>Waitlist</h3>\n                  <ul>\n                    {waitlist.map((person) => (\n                      <li key={person.id}>\n                        <strong>{person.name}</strong>\n                        <button onClick={() => addToTeammates({ ...person, source: \"waitlist\" }, waitlist, setWaitlist)}>\n                          +\n                        </button>\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n              </div>\n            </div>\n            <button className=\"ok-btn\" onClick={handleApply}>OK</button>\n          </div>\n        </div>\n      )}\n\n      {showPopup && <div className=\"popup\">Applied!</div>}\n    </div>\n  );\n};\n\nexport default EventDetails;\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AACzD,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM;IAAEC;EAAG,CAAC,GAAGN,SAAS,CAAC,CAAC;EAC1B,MAAMO,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAE9B,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,MAAM;IAC3C,MAAMgB,aAAa,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC,CAAC,IAAI,EAAE;IAC7E,OAAOJ,aAAa,CAACK,QAAQ,CAACb,EAAE,CAAC;EACnC,CAAC,CAAC;EACF,MAAM,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGvB,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAM,CAACwB,SAAS,EAAEC,YAAY,CAAC,GAAGzB,QAAQ,CAAC,CACzC;IAAEQ,EAAE,EAAE,CAAC;IAAEkB,IAAI,EAAE;EAAQ,CAAC,EACxB;IAAElB,EAAE,EAAE,CAAC;IAAEkB,IAAI,EAAE;EAAM,CAAC,CACvB,CAAC;EAEF,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAG5B,QAAQ,CAAC,CACrC;IAAEQ,EAAE,EAAE,CAAC;IAAEkB,IAAI,EAAE;EAAU,CAAC,EAC1B;IAAElB,EAAE,EAAE,CAAC;IAAEkB,IAAI,EAAE;EAAQ,CAAC,EACxB;IAAElB,EAAE,EAAE,CAAC;IAAEkB,IAAI,EAAE;EAAQ,CAAC,EACxB;IAAElB,EAAE,EAAE,CAAC;IAAEkB,IAAI,EAAE;EAAS,CAAC,CAC1B,CAAC;EAEF,MAAM,CAACG,QAAQ,EAAEC,WAAW,CAAC,GAAG9B,QAAQ,CAAC,CACvC;IAAEQ,EAAE,EAAE,CAAC;IAAEkB,IAAI,EAAE;EAAS,CAAC,EACzB;IAAElB,EAAE,EAAE,CAAC;IAAEkB,IAAI,EAAE;EAAM,CAAC,EACtB;IAAElB,EAAE,EAAE,CAAC;IAAEkB,IAAI,EAAE;EAAO,CAAC,EACvB;IAAElB,EAAE,EAAE,EAAE;IAAEkB,IAAI,EAAE;EAAQ,CAAC,CAC1B,CAAC;EAEFzB,SAAS,CAAC,MAAM;IACd,MAAM8B,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oBAAoBzB,EAAE,EAAE,CAAC;QACtD,IAAI,CAACwB,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBH,QAAQ,CAACI,MAAM,EAAE,CAAC;QAC3D;QACA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;QAClC3B,QAAQ,CAAC0B,IAAI,CAAC;MAChB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC;IAEDR,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACvB,EAAE,CAAC,CAAC;EAER,MAAMiC,cAAc,GAAGA,CAACC,IAAI,EAAEC,QAAQ,EAAEC,OAAO,KAAK;IAClDnB,YAAY,CAAEoB,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEH,IAAI,CAAC,CAAC;IACvCE,OAAO,CAAEC,IAAI,IAAKA,IAAI,CAACC,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACvC,EAAE,KAAKkC,IAAI,CAAClC,EAAE,CAAC,CAAC;EACzD,CAAC;EAED,MAAMwC,mBAAmB,GAAIN,IAAI,IAAK;IACpCjB,YAAY,CAAEoB,IAAI,IAAKA,IAAI,CAACC,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACvC,EAAE,KAAKkC,IAAI,CAAClC,EAAE,CAAC,CAAC;IAC5D,IAAIkC,IAAI,CAACO,MAAM,KAAK,SAAS,EAAE;MAC7BrB,UAAU,CAAEiB,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEH,IAAI,CAAC,CAAC;IACvC,CAAC,MAAM,IAAIA,IAAI,CAACO,MAAM,KAAK,UAAU,EAAE;MACrCnB,WAAW,CAAEe,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEH,IAAI,CAAC,CAAC;IACxC;EACF,CAAC;EAED,MAAMQ,WAAW,GAAGA,CAAA,KAAM;IACxB3B,YAAY,CAAC,IAAI,CAAC;IAClBR,UAAU,CAAC,IAAI,CAAC;IAChB,MAAMC,aAAa,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC,CAAC,IAAI,EAAE;IAC7ED,YAAY,CAACgC,OAAO,CAAC,eAAe,EAAElC,IAAI,CAACmC,SAAS,CAAC,CAAC,GAAGpC,aAAa,EAAER,EAAE,CAAC,CAAC,CAAC;IAC7EK,YAAY,CAAC,KAAK,CAAC;IACnBwC,UAAU,CAAC,MAAM9B,YAAY,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC;EAC7C,CAAC;EAED,IAAI,CAACb,KAAK,EAAE,oBAAOL,OAAA;IAAAiD,QAAA,EAAG;EAAwB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAElD,oBACErD,OAAA;IAAKsD,SAAS,EAAC,yBAAyB;IAAAL,QAAA,gBACtCjD,OAAA;MAAQsD,SAAS,EAAC,UAAU;MAACC,OAAO,EAAEA,CAAA,KAAMnD,QAAQ,CAAC,CAAC,CAAC,CAAE;MAAA6C,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACzErD,OAAA;MAAKsD,SAAS,EAAC,oBAAoB;MAAAL,QAAA,gBACjCjD,OAAA;QAAKwD,GAAG,EAAEnD,KAAK,CAACoD,IAAK;QAACC,GAAG,EAAE,GAAGrD,KAAK,CAACsD,OAAO,OAAQ;QAACL,SAAS,EAAC;MAAY;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC7ErD,OAAA;QAAIsD,SAAS,EAAC,aAAa;QAAAL,QAAA,EAAE5C,KAAK,CAACuD;MAAK;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC9CrD,OAAA;QAAGsD,SAAS,EAAC,YAAY;QAAAL,QAAA,GAAC,QAAM,EAAC5C,KAAK,CAACwD,IAAI;MAAA;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChDrD,OAAA;QAAGsD,SAAS,EAAC,eAAe;QAAAL,QAAA,GAAC,WAAS,EAAC5C,KAAK,CAACsD,OAAO;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzDrD,OAAA;QAAQsD,SAAS,EAAC,WAAW;QAACC,OAAO,EAAEA,CAAA,KAAM/C,YAAY,CAAC,IAAI,CAAE;QAACsD,QAAQ,EAAErD,OAAQ;QAAAwC,QAAA,EAChFxC,OAAO,GAAG,SAAS,GAAG;MAAO;QAAAyC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,EAEL9C,SAAS,iBACRP,OAAA;MAAKsD,SAAS,EAAC,eAAe;MAAAL,QAAA,eAC5BjD,OAAA;QAAKsD,SAAS,EAAC,WAAW;QAAAL,QAAA,gBACxBjD,OAAA;UAAQsD,SAAS,EAAC,WAAW;UAACC,OAAO,EAAEA,CAAA,KAAM/C,YAAY,CAAC,KAAK,CAAE;UAAAyC,QAAA,EAAC;QAAC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC5ErD,OAAA;UAAKsD,SAAS,EAAC,eAAe;UAAAL,QAAA,gBAC5BjD,OAAA;YAAKsD,SAAS,EAAC,YAAY;YAAAL,QAAA,gBACzBjD,OAAA;cAAAiD,QAAA,EAAI;YAAkB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC3BrD,OAAA;cAAAiD,QAAA,EACG9B,SAAS,CAAC4C,GAAG,CAAEC,QAAQ,iBACtBhE,OAAA;gBAAAiD,QAAA,gBACEjD,OAAA;kBAAAiD,QAAA,EAASe,QAAQ,CAAC3C;gBAAI;kBAAA6B,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAS,CAAC,eAChCrD,OAAA;kBAAQuD,OAAO,EAAEA,CAAA,KAAMZ,mBAAmB,CAACqB,QAAQ,CAAE;kBAAAf,QAAA,EAAC;gBAAC;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC;cAAA,GAFzDW,QAAQ,CAAC7D,EAAE;gBAAA+C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAGhB,CACL;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC,eACNrD,OAAA;YAAKsD,SAAS,EAAC,aAAa;YAAAL,QAAA,gBAC1BjD,OAAA;cAAKsD,SAAS,EAAC,eAAe;cAAAL,QAAA,gBAC5BjD,OAAA;gBAAAiD,QAAA,EAAI;cAAO;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAChBrD,OAAA;gBAAAiD,QAAA,EACG3B,OAAO,CAACyC,GAAG,CAAEE,MAAM,iBAClBjE,OAAA;kBAAAiD,QAAA,gBACEjD,OAAA;oBAAAiD,QAAA,EAASgB,MAAM,CAAC5C;kBAAI;oBAAA6B,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAS,CAAC,eAC9BrD,OAAA;oBAAQuD,OAAO,EAAEA,CAAA,KAAMnB,cAAc,CAAC;sBAAE,GAAG6B,MAAM;sBAAErB,MAAM,EAAE;oBAAU,CAAC,EAAEtB,OAAO,EAAEC,UAAU,CAAE;oBAAA0B,QAAA,EAAC;kBAE9F;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC;gBAAA,GAJFY,MAAM,CAAC9D,EAAE;kBAAA+C,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAKd,CACL;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACA,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACF,CAAC,eACNrD,OAAA;cAAKsD,SAAS,EAAC,gBAAgB;cAAAL,QAAA,gBAC7BjD,OAAA;gBAAAiD,QAAA,EAAI;cAAQ;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACjBrD,OAAA;gBAAAiD,QAAA,EACGzB,QAAQ,CAACuC,GAAG,CAAEG,MAAM,iBACnBlE,OAAA;kBAAAiD,QAAA,gBACEjD,OAAA;oBAAAiD,QAAA,EAASiB,MAAM,CAAC7C;kBAAI;oBAAA6B,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAS,CAAC,eAC9BrD,OAAA;oBAAQuD,OAAO,EAAEA,CAAA,KAAMnB,cAAc,CAAC;sBAAE,GAAG8B,MAAM;sBAAEtB,MAAM,EAAE;oBAAW,CAAC,EAAEpB,QAAQ,EAAEC,WAAW,CAAE;oBAAAwB,QAAA,EAAC;kBAEjG;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC;gBAAA,GAJFa,MAAM,CAAC/D,EAAE;kBAAA+C,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAKd,CACL;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACA,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACF,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACNrD,OAAA;UAAQsD,SAAS,EAAC,QAAQ;UAACC,OAAO,EAAEV,WAAY;UAAAI,QAAA,EAAC;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN,EAEApC,SAAS,iBAAIjB,OAAA;MAAKsD,SAAS,EAAC,OAAO;MAAAL,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChD,CAAC;AAEV,CAAC;AAACnD,EAAA,CA3IID,YAAY;EAAA,QACDJ,SAAS,EACPC,WAAW;AAAA;AAAAqE,EAAA,GAFxBlE,YAAY;AA6IlB,eAAeA,YAAY;AAAC,IAAAkE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}